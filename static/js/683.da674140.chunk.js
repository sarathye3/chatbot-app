"use strict";(self.webpackChunkchatbot_app=self.webpackChunkchatbot_app||[]).push([[683],{683:(e,t,n)=>{n.r(t),n.d(t,{default:()=>f,mockApiService:()=>y,sendMessage:()=>w});let s=new Map,a=1;const o={"gpt-3.5-turbo":{style:"efficient",avgLength:"medium",technical:"moderate"},"gpt-4":{style:"thorough",avgLength:"long",technical:"high"},"gpt-4-turbo":{style:"balanced",avgLength:"medium-long",technical:"high"},"claude-3-haiku":{style:"concise",avgLength:"short",technical:"moderate"},"claude-3-sonnet":{style:"balanced",avgLength:"medium",technical:"high"},"claude-3-opus":{style:"comprehensive",avgLength:"long",technical:"very-high"}},i=["That's an **interesting question**! Let me think about that for a moment.\n\nHere are my thoughts:\n- First consideration\n- Second point\n- Final insight","I understand what you're asking. Here's what I think about that topic:\n\n```javascript\nconst answer = 'This could be helpful';\nconsole.log(answer);\n```","Great point! I'd be happy to help you with that.\n\n> This is an important topic that deserves careful consideration.","That's a thoughtful question. From my perspective, I would say:\n\n## Key Points\n\n1. **First aspect** - detailed explanation\n2. **Second aspect** - more context\n3. **Conclusion** - summary thoughts","I see where you're coming from. Let me provide some insights:\n\n- \u2705 This approach works well\n- \u26a0\ufe0f Consider this limitation\n- \ud83d\udca1 Here's a better alternative","Thanks for sharing that with me. Here's my take:\n\n### Analysis\n\nThe situation you've described is quite common. Many people face similar challenges, and there are several ways to approach this.",'That\'s definitely something worth exploring. Let me break it down:\n\n```python\ndef solve_problem():\n    return "Step by step solution"\n```\n\nThis code demonstrates the concept.','I appreciate you bringing this up. Based on what you\'ve told me:\n\n> "The best solutions often come from understanding the problem deeply first."\n\nLet me elaborate on this principle.',"That's a complex topic, but I'll do my best to explain it clearly:\n\n## Overview\n\n**Key concepts:**\n- Fundamental principle\n- Practical application\n- Real-world implications","Interesting! I have some thoughts that might be helpful:\n\n1. Consider this perspective\n2. Think about these factors\n3. Here's what I recommend\n\nLet me know if you'd like me to elaborate on any of these points!","I can definitely help you with that. Let me walk you through it **step by step**:\n\n### Step 1: Preparation\nFirst, you'll need to...\n\n### Step 2: Implementation\nNext, proceed with...\n\n### Step 3: Verification\nFinally, confirm that...","That's a great question that many people wonder about. Here's what I know:\n\n```markdown\n# Important Information\n\n- Fact 1: Detailed explanation\n- Fact 2: Supporting evidence\n- Fact 3: Practical implications\n```","I'm glad you asked! This is actually one of my **favorite topics** to discuss.\n\n[Learn more about this topic](https://example.com)\n\nThe fascinating thing about this subject is how it connects to so many other areas.","That's something I've been thinking about lately too. Here's my perspective:\n\n> The key insight is that *simplicity* often leads to the most elegant solutions.\n\nWhat do you think about this approach?","Thanks for the question! I think there are several ways to approach this:\n\n| Approach | Pros | Cons |\n|----------|------|------|\n| Method A | Fast | Limited |\n| Method B | Flexible | Complex |\n| Method C | Simple | Slower |","You've raised an **excellent point**. Let me explain how I see it:\n\n### The Big Picture\n\nThis connects to broader themes in the field. Consider how this relates to:\n\n- Historical context\n- Current trends\n- Future implications","That's a really good observation. Here's what I would add:\n\n```typescript\ninterface Solution {\n  approach: string;\n  benefits: string[];\n  considerations: string[];\n}\n```\n\nThis structure helps organize our thinking.","I appreciate your curiosity about this topic. Let me share some insights:\n\n## Core Principles\n\n1. **Understanding** comes first\n2. **Practice** reinforces learning\n3. **Application** demonstrates mastery\n\nEach step builds on the previous one.","That's exactly the kind of question I love to explore. Here's my thoughts:\n\n### Quick Answer\n*Yes, this is definitely possible.*\n\n### Detailed Explanation\nThe reason this works is because...\n\n### Next Steps\n- Try this approach\n- Monitor the results\n- Adjust as needed","You're absolutely right to wonder about that. Let me clarify:\n\n> \"Clarity comes from asking the right questions, not just finding quick answers.\"\n\nThis principle applies perfectly to your situation. Here's how..."],r=["Hello! Great to meet you. How can I assist you today?","Hi there! I'm excited to help you with whatever you need.","Hey! Thanks for reaching out. What can I do for you?"],l=["I'm here to help! I can assist with questions, provide information, or just have a conversation.","Of course! I'd be happy to help you with whatever you need. What's on your mind?","I'm designed to be helpful across a wide range of topics. What would you like assistance with?"],c=["You're very welcome! I'm glad I could help.","Happy to help! Feel free to ask if you have any other questions.","My pleasure! Is there anything else I can assist you with?"],h=["Goodbye! It was great chatting with you.","Take care! Feel free to come back anytime.","See you later! Hope to chat again soon."],u=e=>new Promise(t=>setTimeout(t,e)),p=e=>e[Math.floor(Math.random()*e.length)],d=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.toLowerCase();let s;return s=n.includes("hello")||n.includes("hi")||n.includes("hey")?p(r):n.includes("help")||n.includes("assist")?p(l):n.includes("thank")||n.includes("thanks")?p(c):n.includes("bye")||n.includes("goodbye")||n.includes("see you")?p(h):p(i),g(s,t)},g=(e,t)=>{if(!t)return e;const{model:n,temperature:s,personalityPreset:a,systemPrompt:i}=t;if(n&&o[n]){const t=o[n];"short"===t.avgLength&&e.length>200?e=e.substring(0,150)+"...":"long"===t.avgLength&&e.length<300&&(e+="\n\nAdditionally, this topic connects to several interesting concepts that might be worth exploring further."),"concise"===t.style?e=e.replace(/\n\n/g,"\n").replace(/### /g,"**").replace(/## /g,"**"):"comprehensive"===t.style&&(e+="\n\n*Note: This analysis considers multiple perspectives and edge cases.*")}if(void 0!==s)if(s<.3)e=e.replace(/!+/g,".").replace(/\*\*/g,"");else if(s>1.2){e+=p([" \ud83d\ude80"," \u2728","\n\n*Interesting perspective to consider!*","\n\n\ud83d\udcad *What do you think about this approach?*"])}if(a)switch(a){case"creative":e="\ud83c\udfa8 "+e+"\n\n*Creative insight: "+p(["This sparks so many innovative possibilities!","I love exploring unique angles on this topic.","There are countless creative ways to approach this."])+"*";break;case"technical":(e=e.replace(/\.\.\./g," with specific implementation details.")).includes("```")||(e+="\n\n```\n// Technical implementation notes\n// Consider: error handling, edge cases, performance\n```");break;case"friendly":e="\ud83d\ude0a "+e.replace(/\./g,"! "),e+="\n\nI hope this helps! Feel free to ask me anything else. \ud83c\udf1f";break;case"concise":e=e.split("\n\n")[0].replace(/\*\*/g,"").replace(/###? /g,"");break;case"educational":e+="\n\n**Learning objective:** Understanding this concept will help you build foundational knowledge for more advanced topics.\n\n\ud83d\udcda *Would you like me to explain any specific part in more detail?*"}return i&&i.includes("code")&&(e+='\n\n```\n// Example implementation\nconsole.log("Example code based on discussion");\n```'),e},m=function(e){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return{id:a++,text:e,isBot:arguments.length>1&&void 0!==arguments[1]&&arguments[1],timestamp:(new Date).toISOString(),conversationId:t}},y={checkHealth:async()=>(await u(100),{success:!0,data:{status:"OK",message:"Mock AI Chatbot API is running"}}),async getConversations(){await u(200);return{success:!0,data:Array.from(s.entries()).map(e=>{let[t,n]=e;return{id:t,title:n.title,lastMessage:n.messages[n.messages.length-1],messageCount:n.messages.length,createdAt:n.createdAt,updatedAt:n.updatedAt}}).sort((e,t)=>new Date(t.updatedAt)-new Date(e.updatedAt))}},async createConversation(){await u(300);const e=`mock_conv_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,t=(new Date).toISOString(),n={id:e,title:"New Chat",messages:[m("Hello! I'm your AI assistant. How can I help you today?",!0,e)],createdAt:t,updatedAt:t};return s.set(e,n),{success:!0,data:n}},async getConversation(e){await u(150);const t=s.get(e);if(!t)throw new Error("Conversation not found");return{success:!0,data:t}},async sendMessage(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t||"string"!==typeof t||!t.trim())throw new Error("Message is required and must be a non-empty string");let a=s.get(e);if(!a){const n=(new Date).toISOString();a={id:e,title:t.length>50?t.substring(0,50)+"...":t,messages:[],createdAt:n,updatedAt:n},s.set(e,a)}const o=m(t.trim(),!1,e);a.messages.push(o),1===a.messages.filter(e=>!e.isBot).length&&(a.title=t.length>50?t.substring(0,50)+"...":t);let i;if(n&&n.streamingEnabled){i=m("",!0,e),a.messages.push(i),await u(500);const s=d(t,n);i.text=s,i.isStreaming=!1}else{const s=2e3*Math.random()+1e3;await u(s);const o=d(t,n);i=m(o,!0,e),a.messages.push(i)}return a.updatedAt=(new Date).toISOString(),{success:!0,data:{userMessage:o,aiMessage:i,conversation:{id:a.id,title:a.title,messageCount:a.messages.length}}}},async deleteConversation(e){await u(200);if(!s.delete(e))throw new Error("Conversation not found");return{success:!0,message:"Conversation deleted successfully"}},clearAllConversations:async()=>(await u(250),s.clear(),a=1,{success:!0,message:"All conversations cleared"})},w=async(e,t)=>(await u(1e3*Math.random()+1e3),d(e,t)),f=y}}]);
//# sourceMappingURL=683.da674140.chunk.js.map